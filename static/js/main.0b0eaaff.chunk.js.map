{"version":3,"sources":["components/cell/cell.js","algorithm/random.sudoku.js","algorithm/sudoku.js","components/board.component.js","components/nav-bar.component.js","components/tools.component.js","components/timer.component.js","components/numpad.component.js","components/game.component.js","algorithm/removeSudoku.component.js","App.js","serviceWorker.js","index.js"],"names":["cell","matRandom","matrix","props","i","value","row","col","pencil","$","document","ready","css","className","onClick","id","board","state","squares","Array","fill","map","renderSquare","bind","renderArray","rowHtml","this","arrayHtml","push","key","React","Component","isSave","colBox","c","swapLastCol","num","times","j","randomSudoku","queue","length","pos","Math","floor","random","splice","randomNumber","animation","zeroCells","solveSudoku","mat","slice","solve","indexColumn","zeroList","colList","parseInt","findZero","x","rowBox","r","navBar","navSlide","burger","querySelector","nav","navLinks","querySelectorAll","addEventListener","classList","toggle","forEach","link","index","style","href","clearTable","restart","Tools","undo","class","redo","title","check","Timer","second","minute","hour","pad","countup","val","setInterval","seconds","minutes","setState","html","NumPad","game","history","solved","solving","step","ans","handleClick","whenKey","handleRandom","handleUndo","handleSolve","zeroAnimation","solveAnimation","setTimeout","removeClass","text","addClass","console","log","concat","alert","mated","level","cells","removeSudoku","e","numpad","attr","press","target","indexOf","_","keydown","off","on","blur","addedClass","current","prop","handleClearTable","handleRestart","handleRedo","handleCheck","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b0eaaff.chunk.js","sourcesContent":["import React from 'react';\r\nimport './cell.css';\r\nimport $ from 'jquery';\r\n\r\nfunction cell(props){\r\n    let i = props.value.i;\r\n    let row = props.value.row;\r\n    let col = props.value.col;\r\n\r\n    let pencil = props.value.pencil;\r\n\r\n    $(document).ready(function(){\r\n        $('div[class|=square-grid]').css('display','none');\r\n        if (pencil){\r\n            $('div[class=square-grid+'+pencil+']').css('display','grid');\r\n        }\r\n    })\r\n\r\n    return(\r\n        <button \r\n        className = 'square' \r\n        onClick={props.onClick} \r\n        id={`${row}-${col}`} \r\n        value={i}\r\n        row = {`${row}`}\r\n        col = {`${col}`}\r\n        >\r\n            {/* <div className='square-grid'>\r\n                <div className='square-grid-1'>1</div>\r\n                <div className='square-grid-2'>2</div>\r\n                <div className='square-grid-3'>3</div>\r\n                <div className='square-grid-4'>4</div>\r\n                <div className='square-grid-5'>5</div>\r\n                <div className='square-grid-6'>6</div>\r\n                <div className='square-grid-7'>7</div>\r\n                <div className='square-grid-8'>8</div>\r\n                <div className='square-grid-9'>9</div>\r\n            </div> */}\r\n            {i == 0 ? ' ': i}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default cell;","// // random row and col\r\nvar matRandom;\r\n\r\nfunction isSave(i,col){\r\n    // box\r\n    let colBox = col - col%3\r\n    for(let c = colBox; c < colBox+3; c++){\r\n        if(matRandom[0][c] === i )return false\r\n    }\r\n    return true\r\n}\r\n\r\nfunction creatematRandomrix(){\r\n    return Array(9).fill(0).map(() => Array(9).fill(0));\r\n}\r\n\r\nfunction swapLastCol(num,i,times){\r\n    let j = 0\r\n    while (true){\r\n        if (isSave(num[i],j) && isSave(matRandom[times][j],8)){\r\n            num[i] = matRandom[times][j]\r\n            matRandom[times][j] = num[i]\r\n            return \r\n        }\r\n        j += 1\r\n    }\r\n}\r\n\r\nfunction randomNumber(){\r\n    let times = 0\r\n    let n = 1\r\n    while (times <= n){\r\n        let queue = [];\r\n        let num = [];\r\n        // add 1-9 to queqe\r\n        for(let i = 1 ; i < 10; i++) queue.push(i);\r\n        // random number from queue 0 - 8 at first\r\n        while (queue.length){\r\n            let pos = Math.floor(Math.random()*queue.length)\r\n            num.push(queue[pos])\r\n            queue.splice(pos,1)\r\n        }\r\n        // insert num to first row of matRandomrix\r\n        let i = 0\r\n        for(let col = 0 ; col < 9; col++){   \r\n            if(times > 0){\r\n                while (!isSave(num[i],col)){\r\n                    if (col === 6 || col === 7 || col === 8) {\r\n                        swapLastCol(num,i,times);\r\n                    }\r\n                    else { // push and goto next i\r\n                        num.push(num[i])\r\n                        i += 1 \r\n                    }\r\n                }\r\n            }\r\n            matRandom[times][col] = num[i];\r\n            i += 1  \r\n        }\r\n        times += 1\r\n    }\r\n}\r\n\r\nexport function randomSudoku(){\r\n    matRandom = creatematRandomrix();\r\n    randomNumber();\r\n    return matRandom;\r\n}\r\n","var matrix;\r\nvar animation = [];\r\nvar zeroCells = [];\r\n\r\nexport function solveSudoku(mat){\r\n    animation = [];\r\n    zeroCells = [];\r\n    matrix = mat.map(row => {\r\n        return row.slice();\r\n    });\r\n    let zeroList = findZero();\r\n    if(solve(0,0,zeroList)) {\r\n        return [ matrix, animation, zeroCells];\r\n    }\r\n    else return [null,null]\r\n}\r\n\r\nfunction isSave(i,row,col){\r\n    // in row and col\r\n    for(let x = 0 ; x < 9 ; x++){\r\n        if (matrix[row][x] === i) return false; // in row \r\n        if (matrix[x][col] === i) return false; // in col\r\n    }\r\n\r\n    // box\r\n    let rowBox = row - (row % 3);\r\n    let colBox = col - (col % 3);\r\n    for (let r = rowBox; r < rowBox+3; r++){\r\n        for (let c = colBox; c < colBox+3; c++){\r\n            if (matrix[r][c] === i) return false\r\n        }\r\n    }\r\n    // console.log('isSave');\r\n    return true\r\n}\r\n\r\nfunction solve(row,indexColumn,zeroList){\r\n    if(row >= zeroList.length) return true;\r\n    if(indexColumn >= zeroList[row].length) return solve(row+1,0,zeroList);\r\n    \r\n    const col = zeroList[row][indexColumn];\r\n    // console.log(row,col,matrix);\r\n    for(let i = 1; i <= 9; i++){\r\n        animation.push([row,col,i]);\r\n        if (isSave(i,row,col)){\r\n            matrix[row][col] = i;\r\n            // console.log(row,col,i);\r\n            // next\r\n            if(solve(row,indexColumn+1,zeroList)){\r\n                // console.log('finish');\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    matrix[row][col] = 0;\r\n    return false;\r\n}\r\n\r\nfunction findZero(){\r\n    let zeroList = [];\r\n    for(let row = 0 ; row < 9; row++){\r\n        let colList = [];\r\n        for(let col = 0; col < 9; col++){\r\n            if (matrix[row][col] === 0) {colList.push(col);zeroCells.push([row,col]);}\r\n            matrix[row][col] = parseInt(matrix[row][col]);\r\n        }\r\n        zeroList.push(colList);\r\n    }\r\n    // console.log('zeroList: ', typeof zeroList, zeroList);\r\n    return zeroList;\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Cell from './cell/cell';\r\nimport './board.component.css';\r\n\r\nclass board extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            squares: new Array(9).fill(null).map(() => new Array(9).fill(1))\r\n        }\r\n        this.renderSquare = this.renderSquare.bind(this);\r\n        this.renderArray = this.renderArray.bind(this);\r\n    }\r\n\r\n    renderSquare(i,row,col){\r\n        // console.log(\"Hello World\", i);\r\n        let value = {i:i,row:row,col:col};\r\n        return(\r\n            <Cell value={value} onClick={() => this.props.onClick(i,row,col)}/>\r\n        );\r\n    }\r\n\r\n    renderArray(){\r\n        let squares = this.props.squares;\r\n        var row,col,rowHtml;\r\n        rowHtml = '';\r\n        let arrayHtml = [];\r\n        for(row = 0 ; row < 9; row++){\r\n            rowHtml = [];\r\n            for(col = 0 ; col < 9 ; col++){\r\n                rowHtml.push(\r\n                    <td className = {col} key={9*row+col}>\r\n                        {this.renderSquare(squares[row][col],row,col)}\r\n                    </td>\r\n                );                \r\n            }\r\n            arrayHtml.push(<tr className = {row}>{rowHtml}</tr>);\r\n        }\r\n        return (\r\n            <table id = 'board'>{arrayHtml}</table>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className='cover-board'>\r\n                {this.renderArray()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default board;","import React from 'react';\r\nimport './nav-bar.component.css'\r\n\r\nexport default class navBar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.navSlide()\r\n    }\r\n    navSlide(){\r\n        const burger = document.querySelector('.burger');\r\n        const nav = document.querySelector('.nav-links');\r\n        const navLinks = document.querySelectorAll('.nav-links li');\r\n\r\n        burger.addEventListener('click',() => {\r\n            nav.classList.toggle('nav-active');\r\n\r\n            navLinks.forEach((link, index) => {\r\n                if(link.style.animation){\r\n                    link.style.animation = ''\r\n                }\r\n                else link.style.animation = `navLinkFade 0.5s ease forwards ${index/7+1}s`;\r\n            })\r\n\r\n            burger.classList.toggle('toggle');\r\n        })\r\n\r\n        \r\n\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <nav>\r\n                <div className='logo'>\r\n                    <h4>SUDOKU</h4>\r\n                </div>\r\n                <ul className='nav-links'>\r\n                    <li><a href='#'>Speed</a></li>\r\n                    <li><a href='#' onClick={this.props.random}>Random</a></li>\r\n                    <li><a href='#' onClick={this.props.solve}>Solve</a></li>\r\n                    <li><a href='#' onClick={this.props.clearTable}>Clear Table</a></li>\r\n                    <li><a href='#' onClick={this.props.restart}>Restart</a></li>\r\n                </ul>\r\n                <div className='burger'>\r\n                    <div className='line1'></div>\r\n                    <div className='line2'></div>\r\n                    <div className='line3'></div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './tools.component.css';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\n\r\nexport default class Tools extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <ul className='Tools'>\r\n                <li>\r\n                    <a href='#' onClick={this.props.undo}>\r\n                        <div class='icon' ><HistoryIcon className='fa'/></div>\r\n                        <div class='name'>Undo</div>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href='#' onClick={this.props.redo} title='RedoIcon'>\r\n                        <div class='icon'><RedoIcon className='fa' /></div>\r\n                        <div class='name'>Redo</div>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href='#' id='backspace'>\r\n                        <div class='icon'><BackspaceIcon className='fa'/></div>\r\n                        <div class='name'>Erase</div>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href='#' onClick={this.props.check}>\r\n                        <div class='icon'><CheckIcon className='fa'/></div>\r\n                        <div class='name'>Check</div>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n} ","import React from 'react';\r\nimport './timer.component.css';\r\nimport $ from 'jquery';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\n\r\nexport default class Timer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            second: 0,\r\n            minute: 0,\r\n            hour: 0\r\n        }\r\n        this.pad = this.pad.bind(this);\r\n        this.countup = this.countup.bind(this);\r\n    }\r\n\r\n    pad(val){\r\n        if(val <= 9){\r\n            return '0'+val;\r\n        }else{\r\n            return val;\r\n        }\r\n    }\r\n\r\n    countup(){\r\n        setInterval(() => {\r\n            let seconds = this.state.second;\r\n            ++seconds;\r\n            let minutes = seconds/60;\r\n            let hour = minutes/60;    \r\n            this.setState({\r\n                second: seconds,\r\n                minute: this.pad(parseInt(minutes%60)),\r\n                hour: this.pad(parseInt(hour%24))\r\n            });\r\n            $('#hour').html(this.state.hour);\r\n            $('#minute').html(this.state.minute);\r\n            $('#second').html(this.pad(this.state.second%60));\r\n        },1000);\r\n    }\r\n \r\n    render(){\r\n        return(\r\n            <div className='Timer' >\r\n                <div className = 'time'>\r\n                    <span id = 'hour'>00</span> : <span id ='minute'>00</span> : <span id='second'>00</span>\r\n                </div>\r\n                <div className='icon'>\r\n                    <PlayArrowIcon className='PlayArrowIcon'/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './numpad.component.css';\r\n\r\nexport default class NumPad extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className ='NumPad'>\r\n                <button class='numpad-1'>1</button>\r\n                <button class='numpad-2'>2</button>\r\n                <button class='numpad-3'>3</button>\r\n                <button class='numpad-4'>4</button>\r\n                <button class='numpad-5'>5</button>\r\n                <button class='numpad-6'>6</button>\r\n                <button class='numpad-7'>7</button>\r\n                <button class='numpad-8'>8</button>\r\n                <button class='numpad-9'>9</button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Board from './board.component';\r\nimport './game.component.css';\r\nimport $ from 'jquery';\r\nimport {randomSudoku} from '../algorithm/random.sudoku.js'\r\nimport {solveSudoku} from '../algorithm/sudoku.js'\r\nimport {removeSudoku} from '../algorithm/removeSudoku.component.js'\r\nimport NavBar from './nav-bar.component';\r\nimport Tools from './tools.component';\r\nimport Time from './timer.component';\r\nimport NumPad from './numpad.component';\r\n\r\nclass game extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            history: [\r\n                {squares: new Array(9).fill().map(() => new Array(9).fill(0))}\r\n            ],\r\n            solved: false,\r\n            solving: false,\r\n            step: 0,\r\n            random: false,\r\n            animation: false,\r\n            zeroCells: false,\r\n            ans: false,\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.whenKey = this.whenKey.bind(this);\r\n        this.handleRandom = this.handleRandom.bind(this);\r\n        this.handleUndo = this.handleUndo.bind(this);\r\n        this.handleSolve = this.handleSolve.bind(this);\r\n        this.zeroAnimation = this.zeroAnimation.bind(this);\r\n        this.solveAnimation = this.solveAnimation.bind(this);\r\n    }\r\n    //animation for solving\r\n    solveAnimation(animation){\r\n        for(let i = 0 ; i < animation.length; i++){\r\n            let row = animation[i][0];\r\n            let col = animation[i][1];\r\n            let val = animation[i][2];\r\n            setTimeout(() => {\r\n                $('button').removeClass('square-solve');\r\n                $('button[row='+row+'][col='+col+']').removeClass('zero-square').text(val);\r\n                $('button[row='+row+'][col='+col+']').addClass('square-solve solved').text(val);\r\n            },0*i);\r\n        }\r\n    }\r\n    //animation for empty cells\r\n    zeroAnimation(zeroCells){\r\n        for(let i = 0; i < zeroCells.length; i++){\r\n            let row = zeroCells[i][0];\r\n            let col = zeroCells[i][1];\r\n            setTimeout(() => {\r\n                $('button[row='+row+'][col='+col+']').addClass('zero-square');\r\n                console.log('zero: ',zeroCells);\r\n            },20*i);\r\n        }\r\n    }\r\n    //when click solve\r\n    handleSolve(){\r\n        if(this.state.solved|| this.state.solving) return;\r\n        let history = this.state.history;\r\n        let step = this.state.step;\r\n        let current = history[step];\r\n        let squares = current.squares.slice();\r\n        let [ans,animation,zeroCells] = solveSudoku(squares);\r\n        if(ans){\r\n            $('button').removeClass('zero-square square-solve solved square-wrong square-correct');\r\n            this.setState({solving:true});\r\n            this.zeroAnimation(zeroCells);\r\n            \r\n            setTimeout(() => {\r\n                this.solveAnimation(animation);\r\n            },zeroCells.length*20);\r\n\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    history: history.concat([\r\n                        {squares: ans}\r\n                    ]),\r\n                    step: history.length,\r\n                    solving: false,\r\n                    solved: ans\r\n                });\r\n            },animation.length*50+zeroCells.length*20);\r\n        }else{\r\n            alert(\"Can't solve!\");\r\n        }\r\n    }\r\n\r\n    handleRandom(){\r\n        if(this.state.solving) return;\r\n        let history = this.state.history;\r\n        let mat,animation,zeroCells,mated;\r\n        $('button').removeClass('zero-square square-solve solved square-prototype square-wrong square-correct');\r\n        while(true){\r\n            mat = randomSudoku();\r\n            mat = solveSudoku(mat)[0];\r\n            if(mat) break\r\n        }\r\n        [mated,zeroCells] = removeSudoku(mat,4);\r\n        //disabled button\r\n        for(let i = 0 ; i < zeroCells.length; i++){\r\n            let row = zeroCells[i][0];\r\n            let col = zeroCells[i][1];\r\n            $('button[row='+row+'][col='+col+']').addClass('square-prototype');\r\n        }\r\n        //setState\r\n        this.setState({\r\n            history: [\r\n                {\r\n                    squares: mated\r\n                }\r\n            ],\r\n            solved: false,\r\n            random: true,\r\n            step: 0,\r\n            ans: mat,\r\n            zeroCells: zeroCells,\r\n        });\r\n    }\r\n\r\n    whenKey(e,row,col,numpad){\r\n        if (this.state.solved) return;\r\n        if ($('button[row='+row+'][col='+col+']').attr('class') === 'square' && this.state.random) return;\r\n        $('button[row='+row+'][col='+col+']').removeClass('square-wrong square-correct');\r\n        let history = this.state.history.slice(0,this.state.step + 1);\r\n        let current = history[history.length-1];\r\n        let squares = current.squares.map(row => {return row.slice();});\r\n        let press;\r\n        //check key before insert\r\n        if(e.key == 'Delete' || e.key == 'Backspace' || e === 0) press = 0\r\n        else if(numpad){\r\n            press = $(e.target).attr('class');\r\n            press = press[press.length-1];\r\n        }else{\r\n            let number = ['1','2','3','4','5','6','7','8','9'];\r\n            let isNumber = number.indexOf(e.key)\r\n            if(isNumber < 0){\r\n                return;\r\n            }\r\n            press = e.key\r\n        }\r\n        // convert char to int then put into selected square\r\n        let val = parseInt(press);\r\n        squares[row][col] = val;\r\n        //add move\r\n        //add new history and step\r\n        this.setState({\r\n            history: history.concat([\r\n                {\r\n                    squares: squares\r\n                }\r\n            ]),\r\n            step: history.length,\r\n        })\r\n    }\r\n\r\n    handleClick(i,row,col){\r\n        var _ = this\r\n        $(document).ready(function(){\r\n            $('button[row='+row+']').addClass('square-neighbor');\r\n            $('button[col='+col+']').addClass('square-neighbor');\r\n            if( i > 0 ){\r\n                $('button[value='+i+']').addClass('square-focus');\r\n            }\r\n            //when using keyboard\r\n            $('button:focus').keydown(e => {\r\n                _.whenKey(e,row,col,false);\r\n            })\r\n            //when using the numpad\r\n            $('button[class|=numpad]').off('click').on('click',(e => {\r\n                _.whenKey(e,row,col,true);\r\n            }));\r\n\r\n            $('a[id=backspace]').off('click').on('click',(e => {\r\n                _.whenKey(0,row,col,true);\r\n            }));\r\n\r\n            $('button').blur(function(){\r\n                $('button[row='+row+']').removeClass('square-neighbor');\r\n                $('button[col='+col+']').removeClass('square-neighbor');    \r\n                $('button[value='+i+']').removeClass('square-focus');\r\n            });\r\n        })\r\n    }\r\n    \r\n    handleRestart(){\r\n        $('button').removeClass('zero-square square-solve solved square-wrong square-correct');\r\n        let history = this.state.history[0];\r\n        let squares = history.squares;\r\n        this.setState({\r\n            history: [{\r\n                squares: squares\r\n            }],\r\n            solved: false,\r\n            step: 0,\r\n            random: true,\r\n        });\r\n    }\r\n\r\n    handleClearTable(){\r\n        $('button').removeClass('zero-square square-solve solved square-prototype square-wrong square-correct');\r\n        $('button[class|=square').text('');\r\n        this.setState({\r\n            history: [\r\n                {squares: new Array(9).fill().map(() => new Array(9).fill(0))}\r\n            ],\r\n            solved: false,\r\n            solving: false,\r\n            step: 0,\r\n            random: false,\r\n            ans: false\r\n        });\r\n    }\r\n\r\n    handleUndo(){\r\n        let step = this.state.step;\r\n        console.log('undo')\r\n        if(step > 0){\r\n            this.setState({\r\n                step: --step,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleRedo(){\r\n        let history = this.state.history;\r\n        let step = this.state.step;\r\n        console.log(step,history.length);\r\n        if(step < history.length-1){\r\n            this.setState({step: ++step});\r\n        }\r\n    }\r\n\r\n    handleCheck(){\r\n        let ans = this.state.ans;\r\n        if(!ans) return;\r\n        let step = this.state.step;\r\n        let history = this.state.history[step];\r\n        let squares = history.squares;\r\n        let zeroCells = this.state.zeroCells;\r\n\r\n        $('button').removeClass('square-focus square-correct square-wrong');\r\n        for(let i = 0 ; i < zeroCells.length; i++){\r\n            let check = false;\r\n            let row = zeroCells[i][0];\r\n            let col = zeroCells[i][1];\r\n            if(squares[row][col] == 0) continue;\r\n            if(ans[row][col] == squares[row][col]){\r\n                check = true;\r\n            }\r\n            let addedClass = check ? 'square-correct' : 'square-wrong';\r\n            $('button[row='+row+'][col='+col+']').addClass(addedClass);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let history = this.state.history;\r\n        let step = this.state.step;\r\n        let current = history[step];\r\n        if(step < history.length-1){\r\n            $('a[title=RedoIcon]').prop(\"disabled\",true);\r\n        }else{\r\n            $('a[title=RedoIcon]').prop(\"disabled\",false);\r\n\r\n        }\r\n\r\n        return(\r\n            <div className='cover'>\r\n                <NavBar \r\n                    random={() => this.handleRandom()}\r\n                    solve={() => this.handleSolve()}\r\n                    clearTable={() => this.handleClearTable()}\r\n                    restart={() => this.handleRestart()}\r\n                />\r\n                <div className='board-area'>\r\n                    <div className = 'left'>\r\n                        <Board\r\n                            squares = {current.squares}\r\n                            onClick = {(i,row,col) => this.handleClick(i,row,col)}\r\n                        />\r\n                    </div>\r\n                    <div className='right'>\r\n                        <Tools className = 'Tools'\r\n                            undo = {()=> this.handleUndo()}\r\n                            redo = {()=>this.handleRedo()}\r\n                            check = {() => this.handleCheck()}\r\n                        />   \r\n                        <Time className = 'Time'/>\r\n                    </div>\r\n                </div>\r\n                <NumPad className = 'Numpad'></NumPad>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default game;","export function removeSudoku(mat,level){\r\n    let mated = mat.map(row => {return row.slice()});\r\n    let row,col,zeroCells = [];\r\n    let cells = [10,20,30,40,50]\r\n    while(cells[level]){\r\n        row = Math.floor(Math.random()*9)\r\n        col = Math.floor(Math.random()*9)\r\n        mated[row][col] = 0\r\n        zeroCells.push([row,col]);\r\n        cells[level] -= 1\r\n    }\r\n    return [mated,zeroCells];\r\n}","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport './App.css';\n\nimport Game from './components/game.component';\n\nfunction App() {\n  return (\n    <Game />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}